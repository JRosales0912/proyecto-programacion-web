{"version":3,"file":"Panel.base.js","sourceRoot":"../src/","sources":["components/Panel/Panel.base.tsx"],"names":[],"mappings":";;;IAsBA,IAAM,aAAa,GAAG,8BAAkB,EAAkC,CAAC;IAS3E;QAA+B,qCAAuC;QAcpE,mBAAY,KAAkB;YAA9B,YACE,kBAAM,KAAK,CAAC,SAcb;YApBO,YAAM,GAAG,qBAAS,EAAkB,CAAC;YACrC,cAAQ,GAAG,qBAAS,EAAkB,CAAC;YA+KxC,aAAO,GAAG,UAAC,EAAqC;gBACrD,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACrB,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE;wBACxB,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;qBAC1B;oBAED,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE;wBACvC,KAAI,CAAC,QAAQ,CACX;4BACE,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,IAAI;yBAClB,EACD;4BACE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;wBAC1D,CAAC,CACF,CAAC;qBACH;iBACF;YACH,CAAC,CAAC;YAEF,gEAAgE;YACxD,yBAAmB,GAAG,UAAC,GAA0B;gBACvD,IAAI,GAAG,EAAE;oBACP,gCAAoB,CAAC,GAAG,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;oBACxC,IAAI,iBAAK,EAAE,EAAE;wBACX,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;qBAC9C;iBACF;qBAAM;oBACL,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC;iBAC3C;gBACD,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;YAChC,CAAC,CAAC;YAMM,yBAAmB,GAAG,UAAC,KAAkB;gBACvC,IAAA,iDAAoB,EAAE,qCAAc,CAAW;gBACvD,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;gBACzB,IAAI,cAAc,EAAE;oBAClB,wEAAwE;oBACxE,+DAA+D;oBAC/D,iHAAiH;oBACjH,eAAe;oBACf,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,UAAU;wBACzC,oBAAC,mBAAU;wBACT,wEAAwE;wBACxE,+BAA+B;;4BAD/B,wEAAwE;4BACxE,+BAA+B;4BAC/B,MAAM,EAAE;gCACN,IAAI,EAAE;oCACJ,MAAM,EAAE,MAAM;oCACd,KAAK,EAAE,MAAM;oCACb,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;oCACrC,QAAQ,EAAE,uBAAa,CAAC,KAAK;iCAC9B;gCACD,WAAW,EAAE;oCACX,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;iCACpC;6BACF,EACD,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,WAAW,EACvC,OAAO,EAAE,KAAI,CAAC,aAAa,EAC3B,SAAS,EAAE,oBAAoB,qBACd,IAAI,EACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,GACjC,CACE,CACP,CAAC;iBACH;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEM,qBAAe,GAAG,UACxB,KAAkB,EAClB,aAA2D,EAC3D,YAAiC;gBAEzB,IAAA,6BAAU,CAAW;gBAE7B,IAAI,UAAU,EAAE;oBACd,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM;wBACrC,2BAAG,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAC,SAAS,gBAAa,CAAC,IACtF,UAAU,CACT,CACA,CACP,CAAC;iBACH;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEM,mBAAa,GAAG,UAAC,KAAkB;gBACzC,OAAO,CACL,6BAAK,GAAG,EAAE,KAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,OAAO,wBAAsB,IAAI,IACnF,KAAK,CAAC,QAAQ,CACX,CACP,CAAC;YACJ,CAAC,CAAC;YAEM,qBAAe,GAAG,UAAC,KAAkB;gBACnC,IAAA,sCAA4B,EAA5B,iDAA4B,CAAgB;gBACpD,IAAI,qBAAqB,EAAE;oBACzB,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM;wBACrC,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,WAAW,IAAG,qBAAqB,EAAE,CAAO,CACzE,CACP,CAAC;iBACH;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YA4BM,mBAAa,GAAG;gBACtB,KAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC;YAEM,2BAAqB,GAAG;gBAC9B,KAAI,CAAC,QAAQ,CAAC;oBACZ,WAAW,EAAE,KAAK;iBACnB,CAAC,CAAC;gBAEH,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBAChD,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;iBAC1B;YACH,CAAC,CAAC;YA9TA,KAAI,CAAC,iBAAiB,CAAC;gBACrB,sBAAsB,EAAE,oBAAoB;gBAC5C,oBAAoB,EAAE,oBAAoB;gBAC1C,sBAAsB,EAAE,oBAAoB;aAC7C,CAAC,CAAC;YAEH,KAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,KAAK;gBACrB,MAAM,EAAE,KAAK;gBACb,WAAW,EAAE,KAAK;gBAClB,EAAE,EAAE,iBAAK,CAAC,OAAO,CAAC;aACnB,CAAC;;QACJ,CAAC;QAEM,qCAAiB,GAAxB;YACE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAE9D,IAAI,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC/C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;aAC9E;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;QACH,CAAC;QAEM,sCAAkB,GAAzB,UAA0B,aAA0B;YAClD,IAAM,wBAAwB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7E,IAAM,gCAAgC,GAAG,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC;YAExF,IAAI,wBAAwB,IAAI,CAAC,gCAAgC,EAAE;gBACjE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;aAC9E;iBAAM,IAAI,CAAC,wBAAwB,IAAI,gCAAgC,EAAE;gBACxE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;aAC/E;QACH,CAAC;QAEM,6CAAyB,GAAhC,UAAiC,QAAqB;YACpD,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACzC,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACnB,IAAI,CAAC,IAAI,EAAE,CAAC;iBACb;qBAAM;oBACL,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;aACF;QACH,CAAC;QAEM,0BAAM,GAAb;YACQ,IAAA,eAwBQ,EAvBZ,iBAAc,EAAd,mCAAc,EACd,oDAAuB,EACvB,kDAAsB,EACtB,0CAAkB,EAClB,8CAAoB,EACpB,kCAAc,EACd,0BAAU,EACV,uBAAoB,EAApB,yCAAoB,EACpB,kDAAsB,EACtB,0BAAU,EACV,sCAAgB,EAChB,kCAAc,EACd,wCAAiB,EACjB,0BAAU,EACV,cAAI,EACJ,kBAAM,EACN,gBAAK,EACL,4BAAW,EACX,2BAAwC,EAAxC,6DAAwC,EACxC,0BAA6C,EAA7C,kEAA6C,EAC7C,sBAAqC,EAArC,0DAAqC,EACrC,oBAAiC,EAAjC,sDAAiC,EACjC,sBAAqC,EAArC,0DAAqC,CACxB;YACT,IAAA,eAAwD,EAAtD,kCAAc,EAAE,kBAAM,EAAE,4BAAW,EAAE,UAAE,CAAgB;YAC/D,IAAM,MAAM,GAAG,IAAI,KAAK,uBAAS,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAChE,IAAM,KAAK,GAAG,kBAAM,EAAE,CAAC;YACvB,IAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC/C,IAAM,YAAY,GAAG,UAAU,IAAI,EAAE,GAAG,aAAa,CAAC;YACtD,IAAM,iBAAiB,GAAG,IAAI,KAAK,uBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAClF,IAAM,WAAW,GAAG,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,CAAC;YAE9D,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,IAAI,CAAC,iBAAiB,EAAE;gBACjD,OAAO,IAAI,CAAC;aACb;YAED,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;gBACxC,KAAK,EAAE,KAAM;gBACb,SAAS,WAAA;gBACT,sBAAsB,EAAE,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;gBACrF,cAAc,gBAAA;gBACd,eAAe,iBAAA;gBACf,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;gBACnC,gBAAgB,kBAAA;gBAChB,cAAc,gBAAA;gBACd,aAAa,eAAA;gBACb,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;gBACzB,iBAAiB,mBAAA;gBACjB,IAAI,MAAA;aACL,CAAC,CAAC;YAEK,IAAA,8BAAW,CAAU;YAE7B,IAAI,OAAO,CAAC;YACZ,IAAI,UAAU,IAAI,MAAM,EAAE;gBACxB,OAAO,GAAG,CACR,oBAAC,iBAAO,IACN,SAAS,EAAE,WAAW,CAAC,OAAO,EAC9B,YAAY,EAAE,KAAK,EACnB,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,GACzD,CACH,CAAC;aACH;YAED,IAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;YAE9E,OAAO,CACL,oBAAC,aAAK,uBAAK,UAAU;gBACnB,oBAAC,aAAK,IACJ,IAAI,EAAC,QAAQ,EACb,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EACjD,SAAS,EAAE,IAAI,CAAC,OAAO,EACvB,SAAS,EAAE,WAAW,CAAC,WAAW;oBAElC,gDAAS,WAAW,IAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC,IAAI;wBAChE,OAAO;wBACR,oBAAC,qBAAa,qBACZ,sBAAsB,EAAE,sBAAsB,EAC9C,oBAAoB,EAAE,iBAAiB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,oBAAoB,EACjF,sBAAsB,EAAE,sBAAsB,IAC1C,kBAAkB,IACtB,SAAS,EAAE,WAAW,CAAC,IAAI,EAC3B,KAAK,EAAE,iBAAiB,EACxB,uBAAuB,EAAE,uBAAuB,EAChD,2BAA2B,EACzB,kBAAkB,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;4BAGtF,6BAAK,GAAG,EAAE,IAAI,CAAC,mBAAmB,EAAE,SAAS,EAAE,WAAW,CAAC,iBAAiB;gCAC1E,6BAAK,SAAS,EAAE,WAAW,CAAC,QAAQ,qBAAmB,IAAI,IACxD,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,CACrD;gCACN,6BAAK,SAAS,EAAE,WAAW,CAAC,YAAY;oCACrC,MAAM;oCACN,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC;oCAC5C,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAC7C,CACF,CACQ,CACZ,CACA,CACF,CACT,CAAC;QACJ,CAAC;QAEM,wBAAI,GAAX;YAAA,iBAYC;YAXC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACtB,IAAI,CAAC,QAAQ,CACX;oBACE,MAAM,EAAE,IAAI;oBACZ,WAAW,EAAE,IAAI;iBAClB,EACD;oBACE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;gBAC1D,CAAC,CACF,CAAC;aACH;QACH,CAAC;QAmCO,8CAA0B,GAAlC,UAAmC,KAAkB;YACnD,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9C,CAAC;QA6EO,yCAAqB,GAA7B;YACE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YACvC,IAAI,QAAQ,EAAE;gBACZ,IAAM,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC;gBACrC,IAAM,aAAW,GAAG,QAAQ,CAAC,YAAY,CAAC;gBAE1C,IAAI,CAAC,QAAQ,CAAC;oBACZ,cAAc,EAAE,MAAM,GAAG,aAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;iBACpD,CAAC,CAAC;aACJ;QACH,CAAC;QAEO,wCAAoB,GAA5B,UAA6B,EAAO;YAClC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAClC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,EAAE;gBAC9B,IAAI,CAAC,2BAAe,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE;oBACtC,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;wBAC3B,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;wBAC1B,EAAE,CAAC,cAAc,EAAE,CAAC;qBACrB;yBAAM;wBACL,IAAI,CAAC,OAAO,EAAE,CAAC;qBAChB;iBACF;aACF;QACH,CAAC;QAhUa,sBAAY,GAAgB;YACxC,iBAAiB,EAAE,KAAK;YACxB,MAAM,EAAE,KAAK;YACb,UAAU,EAAE,IAAI;YAChB,cAAc,EAAE,IAAI;YACpB,IAAI,EAAE,uBAAS,CAAC,aAAa;SAC9B,CAAC;QAyUJ,gBAAC;KAAA,AAhVD,CAA+B,yBAAa,GAgV3C;IAhVY,8BAAS","sourcesContent":["import * as React from 'react';\r\n\r\nimport {\r\n  BaseComponent,\r\n  classNamesFunction,\r\n  divProperties,\r\n  getId,\r\n  getNativeProps,\r\n  getRTL,\r\n  createRef,\r\n  elementContains,\r\n  allowScrollOnElement,\r\n  isIOS\r\n} from '../../Utilities';\r\nimport { IProcessedStyleSet, getTheme, IconFontSizes } from '../../Styling';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { IPanel, IPanelProps, PanelType, IPanelStyleProps, IPanelStyles } from './Panel.types';\r\nimport { Layer } from '../../Layer';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Popup } from '../../Popup';\r\nimport { IconButton } from '../../Button';\r\n\r\nconst getClassNames = classNamesFunction<IPanelStyleProps, IPanelStyles>();\r\n\r\nexport interface IPanelState {\r\n  isFooterSticky?: boolean;\r\n  isOpen?: boolean;\r\n  isAnimating?: boolean;\r\n  id?: string;\r\n}\r\n\r\nexport class PanelBase extends BaseComponent<IPanelProps, IPanelState> implements IPanel {\r\n  public static defaultProps: IPanelProps = {\r\n    isHiddenOnDismiss: false,\r\n    isOpen: false,\r\n    isBlocking: true,\r\n    hasCloseButton: true,\r\n    type: PanelType.smallFixedFar\r\n  };\r\n\r\n  private _panel = createRef<HTMLDivElement>();\r\n  private _content = createRef<HTMLDivElement>();\r\n  private _classNames: IProcessedStyleSet<IPanelStyles>;\r\n  private _scrollableContent: HTMLDivElement | null;\r\n\r\n  constructor(props: IPanelProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      ignoreExternalFocusing: 'focusTrapZoneProps',\r\n      forceFocusInsideTrap: 'focusTrapZoneProps',\r\n      firstFocusableSelector: 'focusTrapZoneProps'\r\n    });\r\n\r\n    this.state = {\r\n      isFooterSticky: false,\r\n      isOpen: false,\r\n      isAnimating: false,\r\n      id: getId('Panel')\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._events.on(window, 'resize', this._updateFooterPosition);\r\n\r\n    if (this._shouldListenForOuterClick(this.props)) {\r\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n    }\r\n\r\n    if (this.props.isOpen) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(previousProps: IPanelProps): void {\r\n    const shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\r\n    const previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\r\n\r\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\r\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\r\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IPanelProps): void {\r\n    if (newProps.isOpen !== this.state.isOpen) {\r\n      if (newProps.isOpen) {\r\n        this.open();\r\n      } else {\r\n        this.dismiss();\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const {\r\n      className = '',\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      focusTrapZoneProps,\r\n      forceFocusInsideTrap,\r\n      hasCloseButton,\r\n      headerText,\r\n      headerClassName = '',\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isFooterAtBottom,\r\n      isLightDismiss,\r\n      isHiddenOnDismiss,\r\n      layerProps,\r\n      type,\r\n      styles,\r\n      theme,\r\n      customWidth,\r\n      onLightDismissClick = this._onPanelClick,\r\n      onRenderNavigation = this._onRenderNavigation,\r\n      onRenderHeader = this._onRenderHeader,\r\n      onRenderBody = this._onRenderBody,\r\n      onRenderFooter = this._onRenderFooter\r\n    } = this.props;\r\n    const { isFooterSticky, isOpen, isAnimating, id } = this.state;\r\n    const isLeft = type === PanelType.smallFixedNear ? true : false;\r\n    const isRTL = getRTL();\r\n    const isOnRightSide = isRTL ? isLeft : !isLeft;\r\n    const headerTextId = headerText && id + '-headerText';\r\n    const customWidthStyles = type === PanelType.custom ? { width: customWidth } : {};\r\n    const nativeProps = getNativeProps(this.props, divProperties);\r\n\r\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\r\n      return null;\r\n    }\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className,\r\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\r\n      hasCloseButton,\r\n      headerClassName,\r\n      isAnimating: this.state.isAnimating,\r\n      isFooterAtBottom,\r\n      isFooterSticky,\r\n      isOnRightSide,\r\n      isOpen: this.state.isOpen,\r\n      isHiddenOnDismiss,\r\n      type\r\n    });\r\n\r\n    const { _classNames } = this;\r\n\r\n    let overlay;\r\n    if (isBlocking && isOpen) {\r\n      overlay = (\r\n        <Overlay\r\n          className={_classNames.overlay}\r\n          isDarkThemed={false}\r\n          onClick={isLightDismiss ? onLightDismissClick : undefined}\r\n        />\r\n      );\r\n    }\r\n\r\n    const header = onRenderHeader(this.props, this._onRenderHeader, headerTextId);\r\n\r\n    return (\r\n      <Layer {...layerProps}>\r\n        <Popup\r\n          role=\"dialog\"\r\n          ariaLabelledBy={header ? headerTextId : undefined}\r\n          onDismiss={this.dismiss}\r\n          className={_classNames.hiddenPanel}\r\n        >\r\n          <div {...nativeProps} ref={this._panel} className={_classNames.root}>\r\n            {overlay}\r\n            <FocusTrapZone\r\n              ignoreExternalFocusing={ignoreExternalFocusing}\r\n              forceFocusInsideTrap={isHiddenOnDismiss && !isOpen ? false : forceFocusInsideTrap}\r\n              firstFocusableSelector={firstFocusableSelector}\r\n              {...focusTrapZoneProps}\r\n              className={_classNames.main}\r\n              style={customWidthStyles}\r\n              elementToFocusOnDismiss={elementToFocusOnDismiss}\r\n              isClickableOutsideFocusTrap={\r\n                focusTrapZoneProps && !focusTrapZoneProps.isClickableOutsideFocusTrap ? false : true\r\n              }\r\n            >\r\n              <div ref={this._allowScrollOnPanel} className={_classNames.scrollableContent}>\r\n                <div className={_classNames.commands} data-is-visible={true}>\r\n                  {onRenderNavigation(this.props, this._onRenderNavigation)}\r\n                </div>\r\n                <div className={_classNames.contentInner}>\r\n                  {header}\r\n                  {onRenderBody(this.props, this._onRenderBody)}\r\n                  {onRenderFooter(this.props, this._onRenderFooter)}\r\n                </div>\r\n              </div>\r\n            </FocusTrapZone>\r\n          </div>\r\n        </Popup>\r\n      </Layer>\r\n    );\r\n  }\r\n\r\n  public open() {\r\n    if (!this.state.isOpen) {\r\n      this.setState(\r\n        {\r\n          isOpen: true,\r\n          isAnimating: true\r\n        },\r\n        () => {\r\n          this._async.setTimeout(this._onTransitionComplete, 200);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public dismiss = (ev?: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (this.state.isOpen) {\r\n      if (this.props.onDismiss) {\r\n        this.props.onDismiss(ev);\r\n      }\r\n\r\n      if (!ev || (ev && !ev.defaultPrevented)) {\r\n        this.setState(\r\n          {\r\n            isOpen: false,\r\n            isAnimating: true\r\n          },\r\n          () => {\r\n            this._async.setTimeout(this._onTransitionComplete, 200);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Allow the user to scroll within the panel but not on the body\r\n  private _allowScrollOnPanel = (elt: HTMLDivElement | null): void => {\r\n    if (elt) {\r\n      allowScrollOnElement(elt, this._events);\r\n      if (isIOS()) {\r\n        elt.style.height = window.innerHeight + 'px';\r\n      }\r\n    } else {\r\n      this._events.off(this._scrollableContent);\r\n    }\r\n    this._scrollableContent = elt;\r\n  };\r\n\r\n  private _shouldListenForOuterClick(props: IPanelProps): boolean {\r\n    return !!props.isBlocking && !!props.isOpen;\r\n  }\r\n\r\n  private _onRenderNavigation = (props: IPanelProps): JSX.Element | null => {\r\n    const { closeButtonAriaLabel, hasCloseButton } = props;\r\n    const theme = getTheme();\r\n    if (hasCloseButton) {\r\n      // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n      // const iconButtonStyles = this._classNames.subComponentStyles\r\n      // ? (this._classNames.subComponentStyles.iconButton as IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles>)\r\n      // : undefined;\r\n      return (\r\n        <div className={this._classNames.navigation}>\r\n          <IconButton\r\n            // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n            // className={iconButtonStyles}\r\n            styles={{\r\n              root: {\r\n                height: 'auto',\r\n                width: '44px',\r\n                color: theme.palette.neutralSecondary,\r\n                fontSize: IconFontSizes.large\r\n              },\r\n              rootHovered: {\r\n                color: theme.palette.neutralPrimary\r\n              }\r\n            }}\r\n            className={this._classNames.closeButton}\r\n            onClick={this._onPanelClick}\r\n            ariaLabel={closeButtonAriaLabel}\r\n            data-is-visible={true}\r\n            iconProps={{ iconName: 'Cancel' }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _onRenderHeader = (\r\n    props: IPanelProps,\r\n    defaultRender?: (props?: IPanelProps) => JSX.Element | null,\r\n    headerTextId?: string | undefined\r\n  ): JSX.Element | null => {\r\n    const { headerText } = props;\r\n\r\n    if (headerText) {\r\n      return (\r\n        <div className={this._classNames.header}>\r\n          <p className={this._classNames.headerText} id={headerTextId} role=\"heading\" aria-level={2}>\r\n            {headerText}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _onRenderBody = (props: IPanelProps): JSX.Element => {\r\n    return (\r\n      <div ref={this._content} className={this._classNames.content} data-is-scrollable={true}>\r\n        {props.children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _onRenderFooter = (props: IPanelProps): JSX.Element | null => {\r\n    const { onRenderFooterContent = null } = this.props;\r\n    if (onRenderFooterContent) {\r\n      return (\r\n        <div className={this._classNames.footer}>\r\n          <div className={this._classNames.footerInner}>{onRenderFooterContent()}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _updateFooterPosition(): void {\r\n    const _content = this._content.current;\r\n    if (_content) {\r\n      const height = _content.clientHeight;\r\n      const innerHeight = _content.scrollHeight;\r\n\r\n      this.setState({\r\n        isFooterSticky: height < innerHeight ? true : false\r\n      });\r\n    }\r\n  }\r\n\r\n  private _dismissOnOuterClick(ev: any): void {\r\n    const panel = this._panel.current;\r\n    if (this.state.isOpen && panel) {\r\n      if (!elementContains(panel, ev.target)) {\r\n        if (this.props.onOuterClick) {\r\n          this.props.onOuterClick();\r\n          ev.preventDefault();\r\n        } else {\r\n          this.dismiss();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onPanelClick = (): void => {\r\n    this.dismiss();\r\n  };\r\n\r\n  private _onTransitionComplete = (): void => {\r\n    this.setState({\r\n      isAnimating: false\r\n    });\r\n\r\n    if (!this.state.isOpen && this.props.onDismissed) {\r\n      this.props.onDismissed();\r\n    }\r\n  };\r\n}\r\n"]}